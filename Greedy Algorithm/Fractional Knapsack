static bool cmp(pair<double,Item> a,pair<double,Item> b){
        return a.first > b.first;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        vector<pair<double,Item>>v;
        for(int i=0;i < n;i++){
            double unit=(1.0*arr[i].value)/arr[i].weight;
            v.push_back({unit,arr[i]});
        }
        sort(v.begin(),v.end(),cmp);
        double total=0;
        
        for(int i=0;i < n;i++){
            if(v[i].second.weight <= W){
                W=W-v[i].second.weight;
                total+=v[i].second.value;
            }
            else{
                total+=v[i].first*W;
                W=0;
            }
        }
        return total;
    }
