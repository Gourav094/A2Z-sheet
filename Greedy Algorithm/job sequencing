bool static Compare(Job& a,Job& b){
        return (a.profit > b.profit);
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        vector<int> ans;
        sort(arr, arr + n , Compare);
        int maxi=arr[0].dead;
        for(int i=0;i<n;i++){
            maxi=max(maxi,arr[i].dead);
            
        }
        int s[maxi+1];
        for(int i=0;i<=maxi;i++){
            s[i]=-1;
        }
        int count=0,jobprofit=0;
        for(int i=0;i<n;i++){
            for(int j=arr[i].dead;j>0;j--){
                if(s[j]== -1){
                    s[j]=i;
                    count++;
                    jobprofit+=arr[i].profit;
                    break;
                }
            }
        }
        ans.push_back(count);
        ans.push_back(jobprofit);
        // your code here
        return ans;
    } 
