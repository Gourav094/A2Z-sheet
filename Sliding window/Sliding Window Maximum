class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int>ans;
        int i=0,j=0;
        deque<int>q;
        while(j < nums.size()){
//pop the elements less than nums[j]
            while(!q.empty() && q.back() < nums[j]){
                q.pop_back();
            }
//slide the window
            q.push_back(nums[j]);
            if(j-i+1 < k){
                j++;
            }
//window size is k
            else if(j-i+1 == k){
                if(!q.empty()){
                    ans.push_back(q.front());
//handle case for moving i
                    if(nums[i] == q.front()){
                        q.pop_front();
                    }
                }
                i++;
                j++;
            }
        }
        return ans;
    }
};
