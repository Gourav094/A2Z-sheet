Steps :
1. find indegree of all nodes present in the graph
2. push into queue whose indegree equal to zero 
3. for evry node in queue decrease the indegreee amd if it equals to zero then just push in queue

class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int>indegree(V,0);
	    for(int i=0;i < V;i++){
            for(auto node:adj[i]){
                indegree[node]++;
            }
	    }
	    
	    queue<int>q;
	    for(int i=0;i < V;i++){
	        if(indegree[i] == 0){
	            q.push(i);
	        }
	    }
	    vector<int>ans;
	    while(!q.empty()){
	        int node=q.front();
	        q.pop();
	        ans.push_back(node);
	        for(auto it : adj[node] ){
	            indegree[it]--;
	            if(indegree[it] == 0){
	                q.push(it);
	            }
	        }
	    }
	    return ans;
	}
};
