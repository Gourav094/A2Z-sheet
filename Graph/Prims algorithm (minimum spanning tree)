steps:
1. Take a priority queue to store the weight and nodes and they will sort with weight.
2. take top and mark it visited and store its weight
3. for all of its adjacent node put in priority queue with their weight

class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        // code here
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        vector<int>vis(V,0);
        
        pq.push({0,0});
        int sum = 0;
        
        while(!pq.empty()){
            auto it=pq.top();
            pq.pop();
            int node = it.second;
            int wt = it.first;
            
            if(vis[node] == 1){
                continue;
            }
            vis[node] = 1;
            sum += wt;
            
            for(auto temp : adj[node]){
                int adjnode = temp[0];
                int w = temp[1];
                if(!vis[adjnode]){
                    pq.push({w,adjnode});
                }
            }
        }
    
        return sum;
    }
    
};
