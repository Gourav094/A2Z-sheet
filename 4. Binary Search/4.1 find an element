// iterative  approach 
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n=nums.size()-1;
        int s=0;
        
        while(s <= n){
            int mid=s+(n-s)/2;
            if(target==nums[mid])return mid;
            else if(nums[mid] < target){
                s=mid+1;
            }
            else n=mid-1;
        }
        return -1;
    }
};

//Recursive approachh
int solve(vector<int>&nums,int key,int s,int e){
        if(s>e){
            return -1;

        }
        int mid=s+(e-s)/2;
        if(key == nums[mid]){
            return mid;
        }
        else if(key > nums[mid]){
            return solve(nums,key,mid+1,e);
        }
        else{
            return solve(nums,key,s,mid-1);
        }
    }
    int search(vector<int>& nums, int target) {
        return solve(nums,target,0,nums.size()-1);
    }
