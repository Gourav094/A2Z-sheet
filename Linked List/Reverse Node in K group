class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
    //check whether k nodes are present or not 
    //if not simly return the list
        ListNode* check=head;
        for(int i=0;i < k;i++){
            if(!check){
                return head;
            }
            check=check->next;
        }
   //reverse the list upto k
        ListNode* cur=head;
        ListNode* next=head;
        ListNode* prev=NULL;
        for(int i=0;i < k;i++){
            next=cur->next;
            cur->next=prev;
            prev=cur;
            cur=next;
        }
   //call recursion for rest part     
        head->next=reverseKGroup(cur,k);
        return prev;
    }
};
