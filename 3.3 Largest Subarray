//brute force--just traverse the whole array with 2 for loop
//maintain a sum and check with ans 
int ans=0;
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=i;j<n;j++){
                sum+=a[j];
                if(sum==0){
                    ans=max(ans,j-i+1);
                }
            }
            
        }
        return ans;
        
//optimize approach
//2nd way we can store the sum and index in map then find max in sum and return the ans

unordered_map<int,int>mp;
        int sum=0,ans=0;
        for(int i=0;i<n;i++){
            sum+=a[i];
            if(sum==0){
                ans=i+1;     
                //if sum is 0 then update the ans 
            }
            else{
                if(mp.find(sum) != mp.end()){
                    ans=max(ans,i-mp[sum]);
                    //if sum is in map ,means there would be sum =0 from mp[sum] to i so we substract i-mp[sum]
                }
                else {
                    mp[sum]=i;
                }
            }
            
        }
        return ans;
