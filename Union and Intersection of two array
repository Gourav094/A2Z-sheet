------------Union-----
//using map
vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        
        vector<int>ans;
        map<int,int>mp;
        for(int  i=0;i<m;i++){
            mp[arr2[i]]++;
        }
        for(int i=0;i<n;i++){
            mp[arr1[i]]++;
        }
        
        for(auto & i:mp){
            ans.push_back(i.first);
        }
        return ans;
    }
    
    //using set
    vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        
        vector<int>ans;
        set<int>mp;
        for(int i=0;i<n;i++){
            mp.insert(arr1[i]);
        }
        for(int  i=0;i<m;i++){
            mp.insert(arr2[i]);
        }
        
        
        for(auto & i:mp){
            ans.push_back(i);
        }
        return ans;
    }
    
    
    -----------Intersection-----
    vector<int> intersection(vector<int>& arr1, vector<int>& arr2) {
        int n=arr1.size();
        int m=arr2.size();
        vector<int>ans;
        map<int,int>mp;
        
        for(int i=0;i<n;i++){
            mp[arr1[i]]++;
        }
        
        for(int i=0;i<m;i++){
            if(mp.find(arr2[i])!=mp.end()){
                if(mp[arr2[i]]!=0){
                    ans.push_back(arr2[i]);
                mp[arr2[i]]=0;
                }
            }
        }
        return ans;
    }
