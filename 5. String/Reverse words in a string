e.g-- the sky is blue
class Solution {
public:
    string reverseWords(string s) {
        string ans="";
        string temp="";
        stringstream for extracting words from string 
        stringstream ss(s);
        // store first word bcoz we dont need space before first word. eg-> the 
        ss >> temp;
        ans=temp;
        while(ss >> temp){
            // store next words before the first word .e.g--  sky the  
            ans=temp + ' ' + ans;
        }
        return ans;
    }
};


class Solution {
public:
    string reverseWords(string s) {
        stringstream ss(s);
        string temp;
        string ans;
        vector<string> word;
        
        while(ss >> temp){
            word.push_back(temp);
        }
        
        for(int i=word.size()-1;i>=0;--i){
            if(i != word.size()-1) ans+=" ";
            ans+=word[i];
        }
        return ans;
    }
};
// using reverse the strng
class Solution {
public:
    string reverseWords(string s) {
        reverse(s.begin(), s.end());
        
        int i = 0, j = 0, n = s.size(), lastIndex = 0;
        
        while(j < n){
            // Find the starting index of the word: Skipping empty spaces before the word.
            while(j < n && s[j] == ' ') j++;
            
            int startIndex = i;
            
            // Store the complete word... : 
            while(j < n && s[j] != ' '){
                s[i++] = s[j++];
                lastIndex = i;
            }
            
            // Reverse the word
            reverse(s.begin() + startIndex, s.begin() + i);
            s[i++] = ' '; // after every word we need space [" "]
        }
        
        // Resize the string to the last index of the last word: to avoid empty spaces at the end.
        s.resize(lastIndex);
        return s;
    }
};
