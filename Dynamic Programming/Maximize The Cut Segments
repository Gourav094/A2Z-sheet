We have only three rod and we have to cut into segments.
take all cases for one by one.then further they have 3 more choices 
Note:
we can run a for loop also but we are considering 3 rod so dont need 
// Recursion
class Solution
{
    public:
    //Function to find the maximum number of cuts.
    int solve(int n, int x, int y, int z){
        if(n < 0){
            return INT_MIN;
            
        }
        if(n == 0){
            return 0;
        }
        int a=solve(n-x,x,y,z) + 1;
        int b=solve(n-y,x,y,z) + 1;
        int c=solve(n-z,x,y,z) + 1;
        
        return max(a,max(b,c));
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        int ans= solve(n,x,y,z);
        if(ans < 0){
            return 0;
        }
        return ans;
        
    }
};

//Memoize
int solve(int n, int x, int y, int z,vector<int>&dp){
        if(n < 0){
            return INT_MIN;
            
        }
        if(n == 0){
            return 0;
        }
        if(dp[n] != -1){
            return dp[n];
        }
        int a=solve(n-x,x,y,z,dp) + 1;
        int b=solve(n-y,x,y,z,dp) + 1;
        int c=solve(n-z,x,y,z,dp) + 1;
        
        dp[n] = max(a,max(b,c));
        return dp[n];
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        vector<int>dp(n+1,-1);
        int ans= solve(n,x,y,z,dp);
        if(ans < 0){
            return 0;
        }
        return ans;
        
    }
    
    //Tabulation
    class Solution
{
    public:
    //Function to find the maximum number of cuts.
    int solve(int n, int x, int y, int z){
        vector<int>dp(n+1,INT_MIN);
        dp[0]=0;
        
        for(int i=1;i <= n;i++){
            if(i-x >= 0){
                dp[i]=max(dp[i],dp[i-x]+1);
            }
            if(i-y >= 0){
                dp[i]=max(dp[i],dp[i-y]+1);
            }
            if(i-z >= 0){
                dp[i]=max(dp[i],dp[i-z]+1);
            }
            
            
        }
        if(dp[n] < 0){
            return -1;
        }
        return dp[n];
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        
        int ans= solve(n,x,y,z);
        if(ans < 0){
            return 0;
        }
        return ans;
        
    }
};
