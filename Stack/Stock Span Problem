Input
["StockSpanner", "next", "next", "next", "next", "next", "next", "next"]
[[], [100], [80], [60], [70], [60], [75], [85]]
Output
[null, 1, 1, 1, 2, 1, 4, 6]

approach: 
if we observe we can see we need to find the greater elemnt in left side 
i.e i- (NGL index)
class StockSpanner {
public:
    stack<pair<int,int>>s;
    StockSpanner() {
        
    }
    
    int next(int price) {
        int ans=0;
        while(!s.empty() && s.top().first <= price){
            ans+=s.top().second;
            s.pop();
        }
        ans++;
        s.push({price,ans});
        return ans;
    }
};
